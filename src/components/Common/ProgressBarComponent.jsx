import * as React from "react";
import PropTypes from "prop-types";
import { styled } from "@mui/material/styles";
import Stack from "@mui/material/Stack";
import Stepper from "@mui/material/Stepper";
import Step from "@mui/material/Step";
import StepLabel from "@mui/material/StepLabel";
import Check from "@mui/icons-material/Check";

import StepConnector, {
  stepConnectorClasses,
} from "@mui/material/StepConnector";

import { useDispatch, useSelector } from "react-redux";

const QontoStepIconRoot = styled("div")(({ theme, ownerState }) => ({
  color: theme.palette.mode === "dark" ? theme.palette.grey[700] : "#eaeaf0",
  display: "flex",
  height: 22,
  alignItems: "center",
  ...(ownerState.active && {
    color: "#784af4",
  }),
  "& .QontoStepIcon-completedIcon": {
    color: "#784af4",
    zIndex: 1,
    fontSize: 18,
  },
  "& .QontoStepIcon-circle": {
    width: 8,
    height: 8,
    borderRadius: "50%",
    backgroundColor: "currentColor",
  },
}));

function QontoStepIcon(props) {
  const { active, completed, className } = props;

  return (
    <QontoStepIconRoot ownerState={{ active }} className={className}>
      {completed ? (
        <Check className="QontoStepIcon-completedIcon" />
      ) : (
        <div className="QontoStepIcon-circle" />
      )}
    </QontoStepIconRoot>
  );
}

QontoStepIcon.propTypes = {
  /**
   * Whether this step is active.
   * @default false
   */
  active: PropTypes.bool,
  className: PropTypes.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: PropTypes.bool,
};

const ColorlibConnector = styled(StepConnector)(({ theme }) => ({
  [`&.${stepConnectorClasses.alternativeLabel}`]: {
    top: 22,
  },
  [`&.${stepConnectorClasses.active}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundColor: "#187AF7",
    },
  },
  [`&.${stepConnectorClasses.completed}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundColor: "#187AF7",
    },
  },
  [`& .${stepConnectorClasses.line}`]: {
    height: 3,
    border: 0,
    backgroundColor:
      theme.palette.mode === "dark" ? theme.palette.grey[800] : "#eaeaf0",
    borderRadius: 1,
  },
}));

const ColorlibStepIconRoot = styled("div")(({ theme, ownerState }) => ({
  backgroundColor:
    theme.palette.mode === "dark" ? theme.palette.grey[700] : "#ccc",
  zIndex: 1,
  color: "#fff",
  width: 50,
  height: 50,
  display: "flex",
  borderRadius: "50%",
  justifyContent: "center",
  alignItems: "center",
  ...(ownerState.active && {
    backgroundColor: "#187AF7",
    boxShadow: "0 4px 10px 0 rgba(0,0,0,.25)",
  }),
  ...(ownerState.completed && {
    backgroundColor: "#187AF7",
  }),
}));

function ColorlibStepIcon(props) {
  const { active, completed, className } = props;

  return (
    <ColorlibStepIconRoot
      ownerState={{ completed, active }}
      className={className}
    >
      {props.icon === 1 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <circle
            opacity="1"
            cx="14"
            cy="10.5"
            r="3.5"
            stroke="white"
            stroke-width="2"
          />
          <circle
            cx="13.9997"
            cy="14.0007"
            r="11.6667"
            stroke="white"
            stroke-width="2"
          />
          <path
            opacity="1"
            d="M20.9642 23.3333C20.7786 19.9599 19.7457 17.5 14.0002 17.5C8.25465 17.5 7.2218 19.9599 7.03613 23.3333"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
        </svg>
      )}

      {props.icon === 2 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            opacity="1"
            d="M15.75 2.33398C15.75 2.33398 18.4724 2.58147 21.9372 6.04629C25.402 9.51112 25.6495 12.2335 25.6495 12.2335"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            opacity="1"
            d="M16.5752 6.45898C16.5752 6.45898 17.7301 6.78897 19.4625 8.52138C21.195 10.2538 21.5249 11.4087 21.5249 11.4087"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M17.6175 17.5317L16.8924 16.8431L17.6175 17.5317ZM18.1489 16.9723L18.8739 17.661L18.1489 16.9723ZM20.9683 16.581L20.4694 17.4477H20.4694L20.9683 16.581ZM23.1972 17.864L22.6984 18.7307L23.1972 17.864ZM23.8253 21.8848L24.5503 22.5735L23.8253 21.8848ZM22.168 23.6297L21.4429 22.941L22.168 23.6297ZM20.6223 24.4569L20.7205 25.4521L20.6223 24.4569ZM9.11792 19.221L9.84298 18.5324L9.11792 19.221ZM3.50337 8.12693L2.50481 8.18052L2.50481 8.18052L3.50337 8.12693ZM11.0571 9.9203L11.7822 10.609H11.7822L11.0571 9.9203ZM11.2399 6.64195L12.0565 6.06464L11.2399 6.64195ZM9.7688 4.56122L8.95227 5.13853L8.95227 5.13853L9.7688 4.56122ZM6.13836 4.21008L6.86342 4.89877L6.86342 4.89877L6.13836 4.21008ZM4.30716 6.13799L3.5821 5.4493L3.5821 5.4493L4.30716 6.13799ZM12.907 15.2319L13.632 14.5432L12.907 15.2319ZM18.3426 18.2204L18.8739 17.661L17.4238 16.2836L16.8924 16.8431L18.3426 18.2204ZM20.4694 17.4477L22.6984 18.7307L23.6961 16.9973L21.4671 15.7144L20.4694 17.4477ZM23.1002 21.1962L21.4429 22.941L22.893 24.3184L24.5503 22.5735L23.1002 21.1962ZM20.5241 23.4618C18.8823 23.6238 14.5541 23.4923 9.84298 18.5324L8.39286 19.9097C13.5909 25.3823 18.5603 25.6653 20.7205 25.4521L20.5241 23.4618ZM9.84298 18.5324C5.34225 13.7939 4.59496 9.8065 4.50193 8.07333L2.50481 8.18052C2.62212 10.3662 3.54942 14.8105 8.39286 19.9097L9.84298 18.5324ZM11.4475 10.9613L11.7822 10.609L10.332 9.23161L9.99743 9.5839L11.4475 10.9613ZM12.0565 6.06464L10.5853 3.98391L8.95227 5.13853L10.4234 7.21926L12.0565 6.06464ZM5.4133 3.52139L3.5821 5.4493L5.03222 6.82668L6.86342 4.89877L5.4133 3.52139ZM10.7225 10.2726C9.99743 9.5839 9.99651 9.58487 9.99558 9.58585C9.99527 9.58619 9.99433 9.58717 9.9937 9.58784C9.99244 9.58919 9.99116 9.59056 9.98986 9.59196C9.98725 9.59476 9.98457 9.59767 9.98182 9.6007C9.97631 9.60676 9.9705 9.61328 9.96443 9.62026C9.95228 9.63423 9.93905 9.65007 9.925 9.66783C9.89689 9.70335 9.86543 9.74657 9.83264 9.79783C9.76685 9.90063 9.69633 10.0347 9.63688 10.2018C9.51583 10.542 9.452 10.9868 9.53248 11.5361C9.69031 12.6133 10.3917 14.0358 12.1819 15.9206L13.632 14.5432C11.9747 12.7984 11.5839 11.7413 11.5114 11.2462C11.4766 11.0093 11.5131 10.8949 11.5211 10.8723C11.5262 10.858 11.5274 10.8599 11.5173 10.8758C11.5123 10.8836 11.5046 10.8947 11.4933 10.909C11.4876 10.9161 11.4811 10.924 11.4735 10.9328C11.4697 10.9371 11.4657 10.9417 11.4614 10.9464C11.4592 10.9488 11.457 10.9512 11.4547 10.9537C11.4535 10.9549 11.4523 10.9562 11.4512 10.9575C11.4506 10.9581 11.4497 10.959 11.4494 10.9594C11.4485 10.9603 11.4475 10.9613 10.7225 10.2726ZM12.1819 15.9206C13.9661 17.799 15.3314 18.5573 16.3947 18.73C16.9418 18.8188 17.3898 18.7485 17.7332 18.613C17.9008 18.5469 18.0341 18.469 18.135 18.3975C18.1854 18.3617 18.2275 18.3277 18.2619 18.2975C18.2791 18.2825 18.2944 18.2683 18.3078 18.2554C18.3145 18.2489 18.3208 18.2427 18.3265 18.2369C18.3294 18.234 18.3322 18.2312 18.3349 18.2284C18.3362 18.227 18.3375 18.2257 18.3388 18.2244C18.3394 18.2237 18.3404 18.2227 18.3407 18.2224C18.3416 18.2214 18.3426 18.2204 17.6175 17.5317C16.8924 16.8431 16.8934 16.8421 16.8943 16.8411C16.8946 16.8408 16.8955 16.8399 16.8961 16.8392C16.8973 16.838 16.8985 16.8368 16.8996 16.8355C16.902 16.8331 16.9043 16.8308 16.9066 16.8285C16.9111 16.8239 16.9155 16.8196 16.9197 16.8155C16.9282 16.8074 16.9359 16.8003 16.943 16.794C16.9572 16.7816 16.9689 16.7726 16.978 16.7661C16.9964 16.7531 17.0041 16.7507 16.9994 16.7525C16.9982 16.753 16.915 16.7883 16.7154 16.7558C16.2853 16.686 15.2953 16.2943 13.632 14.5432L12.1819 15.9206ZM10.5853 3.98391C9.36103 2.25232 6.90246 1.95359 5.4133 3.52139L6.86342 4.89877C7.41478 4.31829 8.3963 4.35218 8.95227 5.13853L10.5853 3.98391ZM4.50193 8.07333C4.47923 7.65034 4.66263 7.21578 5.03222 6.82668L3.5821 5.4493C2.9399 6.12542 2.44529 7.07171 2.50481 8.18052L4.50193 8.07333ZM21.4429 22.941C21.1311 23.2693 20.8165 23.4329 20.5241 23.4618L20.7205 25.4521C21.6307 25.3623 22.3621 24.8773 22.893 24.3184L21.4429 22.941ZM11.7822 10.609C12.9545 9.37473 13.0347 7.44822 12.0565 6.06464L10.4234 7.21926C10.8835 7.87004 10.8083 8.73017 10.332 9.23161L11.7822 10.609ZM22.6984 18.7307C23.5884 19.2429 23.7575 20.5042 23.1002 21.1962L24.5503 22.5735C26.1305 20.9099 25.6688 18.1328 23.6961 16.9973L22.6984 18.7307ZM18.8739 17.661C19.2829 17.2304 19.9201 17.1315 20.4694 17.4477L21.4671 15.7144C20.1368 14.9486 18.4839 15.1676 17.4238 16.2836L18.8739 17.661Z"
            fill="white"
          />
        </svg>
      )}

      {props.icon === 3 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            d="M2.33301 6.13419C2.33301 4.03539 4.16118 2.33398 6.41634 2.33398C8.6715 2.33398 10.4997 4.03539 10.4997 6.13419C10.4997 8.21654 9.19642 10.6464 7.16305 11.5154C6.68904 11.718 6.14365 11.718 5.66964 11.5154C3.63627 10.6464 2.33301 8.21654 2.33301 6.13419Z"
            stroke="white"
            stroke-width="2"
          />
          <path
            d="M17.5 20.1342C17.5 18.0354 19.3282 16.334 21.5833 16.334C23.8385 16.334 25.6667 18.0354 25.6667 20.1342C25.6667 22.2165 24.3634 24.6464 22.33 25.5154C21.856 25.718 21.3106 25.718 20.8366 25.5154C18.8033 24.6464 17.5 22.2165 17.5 20.1342Z"
            stroke="white"
            stroke-width="2"
          />
          <path
            opacity="0.5"
            d="M13.9998 4.83398C13.4476 4.83398 12.9998 5.2817 12.9998 5.83398C12.9998 6.38627 13.4476 6.83398 13.9998 6.83398V4.83398ZM13.9998 22.1673L14.707 22.8744C14.8945 22.6869 14.9998 22.4325 14.9998 22.1673C14.9998 21.9021 14.8945 21.6477 14.707 21.4602L13.9998 22.1673ZM20.0731 10.1359L20.61 10.9795L20.0731 10.1359ZM7.92661 17.8654L8.46349 18.7091H8.46349L7.92661 17.8654ZM12.957 19.7102C12.5664 19.3197 11.9333 19.3197 11.5427 19.7102C11.1522 20.1007 11.1522 20.7339 11.5427 21.1244L12.957 19.7102ZM11.5427 23.2102C11.1522 23.6007 11.1522 24.2339 11.5427 24.6244C11.9333 25.0149 12.5664 25.0149 12.957 24.6244L11.5427 23.2102ZM18.8204 4.83398H13.9998V6.83398H18.8204V4.83398ZM13.9998 21.1673H9.17931V23.1673H13.9998V21.1673ZM19.5362 9.2922L7.38974 17.0218L8.46349 18.7091L20.61 10.9795L19.5362 9.2922ZM14.707 21.4602L12.957 19.7102L11.5427 21.1244L13.2927 22.8744L14.707 21.4602ZM13.2927 21.4602L11.5427 23.2102L12.957 24.6244L14.707 22.8744L13.2927 21.4602ZM9.17931 21.1673C7.8454 21.1673 7.33809 19.4253 8.46349 18.7091L7.38974 17.0218C4.57628 18.8122 5.84448 23.1673 9.17931 23.1673V21.1673ZM18.8204 6.83398C20.1543 6.83398 20.6616 8.57604 19.5362 9.2922L20.61 10.9795C23.4234 9.18914 22.1552 4.83398 18.8204 4.83398V6.83398Z"
            fill="white"
          />
          <path
            d="M21.583 20.416H21.5935"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M6.40625 6.41602H6.41675"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      )}

      {props.icon === 4 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            opacity="1"
            d="M3.5 11.6673C3.5 7.26754 3.5 5.06765 4.86684 3.70082C6.23367 2.33398 8.43356 2.33398 12.8333 2.33398H15.1667C19.5664 2.33398 21.7663 2.33398 23.1332 3.70082C24.5 5.06765 24.5 7.26754 24.5 11.6673V16.334C24.5 20.7338 24.5 22.9336 23.1332 24.3005C21.7663 25.6673 19.5664 25.6673 15.1667 25.6673H12.8333C8.43356 25.6673 6.23367 25.6673 4.86684 24.3005C3.5 22.9336 3.5 20.7338 3.5 16.334V11.6673Z"
            stroke="white"
            stroke-width="2"
          />
          <path
            d="M9.33301 14H18.6663"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M9.33301 9.33398H18.6663"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M9.33301 18.666H15.1663"
            stroke="white"
            stroke-width="1.5"
            stroke-linecap="round"
          />
        </svg>
      )}

      {props.icon === 5 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            d="M24.4714 14.2167L23.486 14.0463L24.4714 14.2167ZM23.6482 18.9764L22.6629 18.806L23.6482 18.9764ZM8.09442 23.8906L7.09814 23.9767H7.09814L8.09442 23.8906ZM7.1469 12.9325L8.14318 12.8463L7.1469 12.9325ZM16.3278 6.09231L17.3146 6.254V6.25399L16.3278 6.09231ZM15.5547 10.811L16.5415 10.9726L16.5415 10.9726L15.5547 10.811ZM7.81485 11.2911L7.16206 10.5335L7.16206 10.5335L7.81485 11.2911ZM9.49338 9.84463L10.1462 10.6022H10.1462L9.49338 9.84463ZM12.2714 5.58168L11.3035 5.33059L12.2714 5.58168ZM12.8264 3.44219L13.7944 3.69328L13.7944 3.69328L12.8264 3.44219ZM14.7792 2.40906L14.4734 3.36114L14.4734 3.36114L14.7792 2.40906ZM14.9483 2.4634L15.2542 1.51132L15.2542 1.51132L14.9483 2.4634ZM11.506 7.54037L12.388 8.01153L11.506 7.54037ZM16.2225 3.78943L15.2545 4.04052V4.04052L16.2225 3.78943ZM13.6203 2.48844L13.1862 1.58758V1.58758L13.6203 2.48844ZM23.486 14.0463L22.6629 18.806L24.6336 19.1468L25.4567 14.3871L23.486 14.0463ZM15.4528 24.6673H10.0294V26.6673H15.4528V24.6673ZM9.0907 23.8044L8.14318 12.8463L6.15061 13.0186L7.09814 23.9767L9.0907 23.8044ZM22.6629 18.806C22.0825 22.1619 19.0544 24.6673 15.4528 24.6673V26.6673C19.9743 26.6673 23.8786 23.513 24.6336 19.1468L22.6629 18.806ZM15.341 5.93062L14.5678 10.6493L16.5415 10.9726L17.3146 6.254L15.341 5.93062ZM8.46764 12.0486L10.1462 10.6022L8.84059 9.08709L7.16206 10.5335L8.46764 12.0486ZM13.2394 5.83278L13.7944 3.69328L11.8584 3.19109L11.3035 5.33059L13.2394 5.83278ZM14.4734 3.36114L14.6425 3.41548L15.2542 1.51132L15.0851 1.45699L14.4734 3.36114ZM12.388 8.01153C12.7566 7.32155 13.0428 6.59064 13.2394 5.83278L11.3035 5.33059C11.1469 5.93421 10.9186 6.51748 10.6239 7.0692L12.388 8.01153ZM14.6425 3.41548C14.9608 3.51772 15.1822 3.76183 15.2545 4.04052L17.1904 3.53834C16.9396 2.5713 16.1999 1.81513 15.2542 1.51132L14.6425 3.41548ZM13.7944 3.69328C13.8257 3.57246 13.9143 3.4568 14.0544 3.38931L13.1862 1.58758C12.5335 1.90209 12.0421 2.48322 11.8584 3.1911L13.7944 3.69328ZM14.0544 3.38931C14.1826 3.32752 14.3345 3.31654 14.4734 3.36114L15.0851 1.45699C14.46 1.25618 13.7782 1.30231 13.1862 1.58758L14.0544 3.38931ZM16.513 12.9406H22.5576V10.9406H16.513V12.9406ZM17.3146 6.25399C17.4628 5.35001 17.4205 4.42501 17.1904 3.53834L15.2545 4.04052C15.4146 4.65763 15.444 5.30144 15.341 5.93062L17.3146 6.25399ZM10.0294 24.6673C9.54151 24.6673 9.133 24.2935 9.0907 23.8044L7.09814 23.9767C7.22967 25.4979 8.50186 26.6673 10.0294 26.6673V24.6673ZM10.1462 10.6022C10.9414 9.91691 11.8115 9.09085 12.388 8.01153L10.6239 7.0692C10.2313 7.80418 9.60296 8.43014 8.84059 9.08709L10.1462 10.6022ZM25.4567 14.3871C25.7678 12.5883 24.3845 10.9406 22.5576 10.9406V12.9406C23.141 12.9406 23.5861 13.4675 23.486 14.0463L25.4567 14.3871ZM14.5678 10.6493C14.3713 11.8485 15.2957 12.9406 16.513 12.9406V10.9406C16.513 10.9406 16.5135 10.9406 16.5144 10.9407C16.5154 10.9408 16.5166 10.941 16.518 10.9413C16.5208 10.9419 16.5236 10.9429 16.5262 10.9441C16.5312 10.9465 16.5339 10.9491 16.5354 10.9508C16.5368 10.9525 16.5388 10.9554 16.5402 10.9604C16.5409 10.9629 16.5414 10.9657 16.5416 10.9684C16.5417 10.9711 16.5415 10.9727 16.5415 10.9726L14.5678 10.6493ZM8.14318 12.8463C8.11698 12.5433 8.23794 12.2465 8.46764 12.0486L7.16206 10.5335C6.44523 11.1512 6.06911 12.0759 6.15061 13.0186L8.14318 12.8463Z"
            fill="white"
          />
          <path
            opacity="1"
            d="M4.63353 25.0487L3.63725 25.1349H3.63725L4.63353 25.0487ZM3.5 11.9395L4.49628 11.8533C4.45015 11.3198 3.99191 10.9173 3.45689 10.9404C2.92187 10.9635 2.5 11.4039 2.5 11.9395H3.5ZM5.62981 24.9626L4.49628 11.8533L2.50372 12.0256L3.63725 25.1349L5.62981 24.9626ZM4.5 25.0978V11.9395H2.5V25.0978H4.5ZM3.63725 25.1349C3.61556 24.884 3.81326 24.6662 4.06782 24.6662V26.6662C4.98823 26.6662 5.70893 25.8775 5.62981 24.9626L3.63725 25.1349ZM4.06782 24.6662C4.30758 24.6662 4.5 24.8605 4.5 25.0978H2.5C2.5 25.9629 3.20087 26.6662 4.06782 26.6662V24.6662Z"
            fill="white"
          />
        </svg>
      )}

      {props.icon == 6 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            d="M21.21 9.37857L21.7507 8.83789C22.6465 7.94206 24.099 7.94206 24.9948 8.83789C25.8906 9.73371 25.8906 11.1861 24.9948 12.082L24.4541 12.6226M21.21 9.37857C21.21 9.37857 21.2776 10.5275 22.2914 11.5413C23.3052 12.5551 24.4541 12.6226 24.4541 12.6226M21.21 9.37857L16.2393 14.3493C15.9026 14.686 15.7343 14.8543 15.5895 15.0399C15.4187 15.2589 15.2723 15.4958 15.1529 15.7464C15.0516 15.9589 14.9763 16.1848 14.8257 16.6365L14.3437 18.0827L14.1877 18.5506M24.4541 12.6226L19.4834 17.5934C19.1467 17.93 18.9784 18.0984 18.7928 18.2432C18.5738 18.4139 18.3369 18.5604 18.0862 18.6798C17.8737 18.7811 17.6479 18.8564 17.1962 19.0069L15.75 19.489L15.2821 19.645M15.2821 19.645L14.8142 19.8009C14.592 19.875 14.3469 19.8172 14.1812 19.6515C14.0155 19.4858 13.9577 19.2407 14.0318 19.0184L14.1877 18.5506M15.2821 19.645L14.1877 18.5506"
            stroke="white"
            stroke-width="2"
          />
          <path
            d="M9.33301 15.166H12.2497"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M9.33301 10.5H16.9163"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M9.33301 19.834H11.083"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            opacity="1"
            d="M3.5 11.6673C3.5 7.26754 3.5 5.06765 4.86684 3.70082C6.23367 2.33398 8.43356 2.33398 12.8333 2.33398H15.1667C19.5664 2.33398 21.7663 2.33398 23.1332 3.70082C24.5 5.06765 24.5 7.26754 24.5 11.6673V16.334C24.5 20.7338 24.5 22.9336 23.1332 24.3005C21.7663 25.6673 19.5664 25.6673 15.1667 25.6673H12.8333C8.43356 25.6673 6.23367 25.6673 4.86684 24.3005C3.5 22.9336 3.5 20.7338 3.5 16.334V11.6673Z"
            stroke="white"
            stroke-width="1.5"
          />
        </svg>
      )}

      {props.icon === 7 && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <path
            d="M19.833 10.502C22.3705 10.5161 23.7448 10.6286 24.6412 11.5251C25.6663 12.5502 25.6663 14.2001 25.6663 17.4999V18.6666C25.6663 21.9664 25.6663 23.6163 24.6412 24.6415C23.6161 25.6666 21.9662 25.6666 18.6663 25.6666H9.33301C6.03318 25.6666 4.38326 25.6666 3.35813 24.6415C2.33301 23.6163 2.33301 21.9664 2.33301 18.6666L2.33301 17.4999C2.33301 14.2001 2.33301 12.5502 3.35813 11.5251C4.25458 10.6286 5.62881 10.5161 8.16634 10.502"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            opacity="1"
            d="M14 17.5L14 2.33333M14 2.33333L17.5 6.41667M14 2.33333L10.5 6.41667"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      )}
    </ColorlibStepIconRoot>
  );
}

ColorlibStepIcon.propTypes = {
  /**
   * Whether this step is active.
   * @default false
   */
  active: PropTypes.bool,
  className: PropTypes.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: PropTypes.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: PropTypes.node,
};

const steps = [
  { title: "New Lead", label: "Proceed To Add Details" },
  { title: "Initial Contact", label: "Basic Lead Details" },
  { title: "Site Visit", label: "Site Visit Details" },
  { title: "Proposals", label: "Proposal Details" },
  { title: "Negotiations", label: "Negotation Details" },
  { title: "MOU / Charter", label: "MOU / Charter Details" },
  { title: "Go Live", label: "Go Live" },
];
export default function ProgressBarComponent() {
  const count = useSelector((state) => state.counter.value);

  return (
    <div className="col-12">
      <Stack sx={{ width: "100%" }} spacing={6}>
        <Stepper
          alternativeLabel
          activeStep={count}
          connector={<ColorlibConnector />}
        >
          {steps.map((step, index) => (
            <Step key={index}>
              <StepLabel StepIconComponent={ColorlibStepIcon}>
                <p style={{ margin: "0px", fontWeight: "600" }}>{step.title}</p>
                <p style={{ fontSize: "12px", paddingTop: "5px" }}>
                  {step.label}
                </p>
              </StepLabel>
            </Step>
          ))}
        </Stepper>
      </Stack>
    </div>
  );
}
